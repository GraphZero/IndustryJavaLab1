group 'andrew'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'maven-publish'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
    mavenLocal()
}

// Zad 1
// build with "gradle build publishToMavenLocal"
dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
    // https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.0'
}

jar {
    manifest {
        attributes "Test-Class": "com.Gradle"
    }

    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}

// Zad 2
// build with "gradle build setProperties -Pprofile=prod publishToMavenLocal"

// noinspection GroovyAssignabilityCheck

task setProperties {
    def props = new Properties()
    File propsFile = new File('src/main/resources/db.properties')

    if (profile == "dev"){
        props.setProperty('database.jdbc.driverClass', "dev")
        props.setProperty('database.jdbc.database.jdbc.connectionURL', "dev")
        props.setProperty('database.jdbc.username', "dev")
        props.setProperty('database.jdbc.password', "dev")
        props.store(propsFile.newWriter(), null)
    }
    if (profile == "prod"){
        props.setProperty('database.jdbc.driverClass', "prod")
        props.setProperty('database.jdbc.database.jdbc.connectionURL', "prod")
        props.setProperty('database.jdbc.username', "prod")
        props.setProperty('database.jdbc.password', "prod")
        props.store(propsFile.newWriter(), null)
    }
}